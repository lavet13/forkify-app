{"mappings":"AAAA,MAAM,kBAAkB,SAAS,aAAa,CAAC;AAE/C,MAAM,UAAU,SAAU,CAAC,EAAE;IACzB,OAAO,IAAI,QAAQ,SAAU,CAAC,EAAE,MAAM,EAAE;QACpC,WAAW,WAAY;YACnB,OACI,IAAI,MAAM,CAAC,qCAAqC,EAAE,EAAE,QAAQ,CAAC;QAErE,GAAG,IAAI;IACX;AACJ;AAEA,uCAAuC;AAEvC,uCAAuC;AAEvC,QAAQ,GAAG,CAAC;AAEZ,MAAM,UAAU,OAAM,MAAO;IACzB,IAAI;QACA,MAAM,MAAM,MAAM,MAAM;QACxB,MAAM,EAAE,OAAM,EAAE,GAAG;QAEnB,IAAI,CAAC,IAAI,EAAE,EAAE;YACT,MAAM,EAAE,QAAO,EAAE,GAAG,MAAM,IAAI,IAAI;YAClC,MAAM,IAAI,MAAM,CAAC,EAAE,QAAQ,EAAE,EAAE,OAAO,CAAC,CAAC,EAAE;QAC9C,CAAC;QAED,OAAO,MAAM,IAAI,IAAI;IACzB,EAAE,OAAO,KAAK;QACV,MAAM,IAAI;IACd;AACJ;AAEA,MAAM,aAAa,eAAgB,GAAG,EAAE;IACpC,IAAI;QACA,MAAM,EACF,MAAM,EAAE,QAAQ,WAAU,EAAE,CAAA,EAC/B,GAAG,MAAM,QAAQ,IAAI,CAAC;YAAC,QAAQ;YAAM,QAAQ;SAAI;QAElD,IAAI,SAAS,OAAO,WAAW,CAC3B,OAAO,OAAO,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC,KAAK,MAAM,GAAK;YAC7C,MAAM,MAAM,IAAI,KAAK,CAAC;YAEtB,IAAI,IAAI,MAAM,GAAG,GAAG,OAAO;gBAAC;gBAAK;aAAM;YAEvC,MAAM,WAAW,IACZ,GAAG,CAAC,CAAC,MAAM,IAAM;gBACd,IAAI,MAAM,GAAG,OAAO;gBACpB,gDAAgD;gBAChD,OAAO,KAAK,OAAO,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,WAAW;YACpD,GACC,IAAI,CAAC;YAEV,OAAO;gBAAC;gBAAU;aAAM;QAC5B;QAEJ,QAAQ,GAAG,CAAC;QAEZ,MAAM,EACF,GAAE,EACF,YAAW,EACX,SAAQ,EACR,YAAW,EACX,UAAS,EACT,SAAQ,EACR,UAAS,EACT,MAAK,EACR,GAAG;QAEJ,MAAM,SAAS,CAAC;;0BAEE,EAAE,SAAS,OAAO,EAAE,MAAM;;0BAE1B,EAAE,MAAM;;;;;;;;;+EAS6C,EAAE,YAAY;;;;;;;;8EAQf,EAAE,SAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAiCrE,EAAE,YACG,GAAG,CAAC,CAAC,EAAE,SAAQ,EAAE,KAAI,EAAE,YAAW,EAAE,GAAK;YACtC,OAAO,CAAC;;;;;0DAKsB,EAAE,SAAS;;2DAEV,EAAE,KAAK;gCAClC,EAAE,YAAY;;;wBAGtB,CAAC;QACD,GACC,IAAI,CAAC,IAAI;;;;;;;;oDAQkB,EAAE,UAAU;;;;;0BAKtC,EAAE,UAAU;;;;;;;;;QAS9B,CAAC;QAED,gBAAgB,eAAe;QAE/B,gBAAgB,kBAAkB,CAAC,cAAc;IACrD,EAAE,OAAO,KAAK;QACV,MAAM;IACV;AACJ;AAEA,WACI,8EAA8E;AAC9E","sources":["src/js/controller.js"],"sourcesContent":["const recipeContainer = document.querySelector('.recipe');\n\nconst timeout = function (s) {\n    return new Promise(function (_, reject) {\n        setTimeout(function () {\n            reject(\n                new Error(`Request took too long! Timeout after ${s} seconds`)\n            );\n        }, s * 1000);\n    });\n};\n\n// https://forkify-api.herokuapp.com/v2\n\n///////////////////////////////////////\n\nconsole.log('Test');\n\nconst getJSON = async url => {\n    try {\n        const res = await fetch(url);\n        const { status } = res;\n\n        if (!res.ok) {\n            const { message } = await res.json();\n            throw new Error(`${message} (${status})`);\n        }\n\n        return await res.json();\n    } catch (err) {\n        throw err;\n    }\n};\n\nconst showRecipe = async function (url) {\n    try {\n        const {\n            data: { recipe: recipeData },\n        } = await Promise.race([getJSON(url), timeout(15)]);\n\n        let recipe = Object.fromEntries(\n            Object.entries(recipeData).map(([key, value]) => {\n                const str = key.split('_');\n\n                if (str.length < 2) return [key, value];\n\n                const finalStr = str\n                    .map((word, i) => {\n                        if (i === 0) return word;\n                        // return word[0].toUpperCase() + word.slice(1);\n                        return word.replace(word[0], word[0].toUpperCase());\n                    })\n                    .join('');\n\n                return [finalStr, value];\n            })\n        );\n        console.log(recipe);\n\n        const {\n            id,\n            cookingTime,\n            imageUrl,\n            ingredients,\n            publisher,\n            servings,\n            sourceUrl,\n            title,\n        } = recipe;\n\n        const markup = `\n            <figure class=\"recipe__fig\">\n                <img src=\"${imageUrl}\" alt=\"${title}\" class=\"recipe__img\" />\n                <h1 class=\"recipe__title\">\n                    <span>${title}</span>\n                </h1>\n            </figure>\n\n            <div class=\"recipe__details\">\n                <div class=\"recipe__info\">\n                    <svg class=\"recipe__info-icon\">\n                    <use href=\"src/img/icons.svg#icon-clock\"></use>\n                    </svg>\n                    <span class=\"recipe__info-data recipe__info-data--minutes\">${cookingTime}</span>\n                    <span class=\"recipe__info-text\">minutes</span>\n                </div>\n\n                <div class=\"recipe__info\">\n                    <svg class=\"recipe__info-icon\">\n                        <use href=\"src/img/icons.svg#icon-users\"></use>\n                    </svg>\n                    <span class=\"recipe__info-data recipe__info-data--people\">${servings}</span>\n                    <span class=\"recipe__info-text\">servings</span>\n                    <div class=\"recipe__info-buttons\">\n                        <button class=\"btn--tiny btn--increase-servings\">\n                            <svg>\n                            <use href=\"src/img/icons.svg#icon-minus-circle\"></use>\n                            </svg>\n                        </button>\n\n                        <button class=\"btn--tiny btn--increase-servings\">\n                            <svg>\n                            <use href=\"src/img/icons.svg#icon-plus-circle\"></use>\n                            </svg>\n                        </button>\n                    </div>\n                </div>\n\n                <div class=\"recipe__user-generated\">\n                    <svg>\n                        <use href=\"src/img/icons.svg#icon-user\"></use>\n                    </svg>\n                </div>\n                <button class=\"btn--round\">\n                    <svg class=\"\">\n                        <use href=\"src/img/icons.svg#icon-bookmark-fill\"></use>\n                    </svg>\n                </button>\n            </div>\n\n            <div class=\"recipe__ingredients\">\n                <h2 class=\"heading--2\">Recipe ingredients</h2>\n                \n                <ul class=\"recipe__ingredient-list\">\n                    ${ingredients\n                        .map(({ quantity, unit, description }) => {\n                            return `\n                            <li class=\"recipe__ingredient\">\n                            <svg class=\"recipe__icon\">\n                                <use href=\"src/img/icons.svg#icon-check\"></use>\n                            </svg>\n                            <div class=\"recipe__quantity\">${quantity}</div>\n                            <div class=\"recipe__description\">\n                                <span class=\"recipe__unit\">${unit}</span>\n                                ${description}\n                            </div>\n                            </li>\n                        `;\n                        })\n                        .join('')}\n                </ul>\n            </div>\n\n            <div class=\"recipe__directions\">\n                <h2 class=\"heading--2\">How to cook it</h2>\n                <p class=\"recipe__directions-text\">\n                    This recipe was carefully designed and tested by\n                    <span class=\"recipe__publisher\">${publisher}</span>. Please check out\n                    directions at their website.\n                </p>\n                <a\n                    class=\"btn--small recipe__btn\"\n                    href=\"${sourceUrl}\"\n                    target=\"_blank\"\n                >\n                    <span>Directions</span>\n                    <svg class=\"search__icon\">\n                        <use href=\"src/img/icons.svg#icon-arrow-right\"></use>\n                    </svg>\n                </a>\n            </div>\n        `;\n\n        recipeContainer.replaceChildren();\n\n        recipeContainer.insertAdjacentHTML('afterbegin', markup);\n    } catch (err) {\n        alert(err);\n    }\n};\n\nshowRecipe(\n    // 'https://forkify-api.herokuapp.com/api/v2/recipes/5ed6604591c37cdc054bc886'\n    'https://forkify-api.herokuapp.com/api/v2/recipes/5ed6604591c37cdc054bca36'\n);\n"],"names":[],"version":3,"file":"index.62406edb.js.map","sourceRoot":"/__parcel_source_root/"}