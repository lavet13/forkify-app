{"mappings":"AAAA,MAAM,kBAAkB,SAAS,aAAa,CAAC;AAE/C,MAAM,UAAU,SAAU,CAAC,EAAE;IACzB,OAAO,IAAI,QAAQ,SAAU,CAAC,EAAE,MAAM,EAAE;QACpC,WAAW,WAAY;YACnB,OACI,IAAI,MAAM,CAAC,qCAAqC,EAAE,EAAE,OAAO,CAAC;QAEpE,GAAG,IAAI;IACX;AACJ;AAEA,uCAAuC;AAEvC,uCAAuC;AAEvC,QAAQ,GAAG,CAAC;AAEZ,MAAM,UAAU,OAAM,MAAO;IACzB,IAAI;QACA,MAAM,MAAM,MAAM,MAAM;QACxB,MAAM,EAAE,OAAM,EAAE,GAAG;QAEnB,IAAI,CAAC,IAAI,EAAE,EAAE;YACT,MAAM,EAAE,QAAO,EAAE,GAAG,MAAM,IAAI,IAAI;YAClC,MAAM,IAAI,MAAM,CAAC,EAAE,QAAQ,EAAE,EAAE,OAAO,CAAC,CAAC,EAAE;QAC9C,CAAC;QAED,OAAO,MAAM,IAAI,IAAI;IACzB,EAAE,OAAO,KAAK;QACV,MAAM,IAAI;IACd;AACJ;AAEA,MAAM,aAAa,eAAgB,GAAG,EAAE;IACpC,IAAI;QACA,MAAM,EACF,MAAM,EAAE,QAAQ,WAAU,EAAE,CAAA,EAC/B,GAAG,MAAM,QAAQ,IAAI,CAAC;YAAC,QAAQ;YAAM,QAAQ;SAAI;QAElD,IAAI,SAAS,OAAO,WAAW,CAC3B,OAAO,OAAO,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC,KAAK,MAAM,GAAK;YAC7C,MAAM,MAAM,IAAI,KAAK,CAAC;YAEtB,IAAI,IAAI,MAAM,GAAG,GAAG,OAAO;gBAAC;gBAAK;aAAM;YAEvC,QAAQ,GAAG,CAAC;YACZ,MAAM,WAAW,IACZ,GAAG,CAAC,CAAC,MAAM,IAAM;gBACd,IAAI,MAAM,GAAG,OAAO;gBACpB,gDAAgD;gBAChD,OAAO,KAAK,OAAO,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,WAAW;YACpD,GACC,IAAI,CAAC;YAEV,QAAQ,GAAG,CAAC;YAEZ,OAAO;gBAAC;gBAAU;aAAM;QAC5B;QAGJ,QAAQ,GAAG,CAAC;IAChB,EAAE,OAAO,KAAK;QACV,MAAM;IACV;AACJ;AAEA,WACI","sources":["src/js/controller.js"],"sourcesContent":["const recipeContainer = document.querySelector('.recipe');\n\nconst timeout = function (s) {\n    return new Promise(function (_, reject) {\n        setTimeout(function () {\n            reject(\n                new Error(`Request took too long! Timeout after ${s} second`)\n            );\n        }, s * 1000);\n    });\n};\n\n// https://forkify-api.herokuapp.com/v2\n\n///////////////////////////////////////\n\nconsole.log('Test');\n\nconst getJSON = async url => {\n    try {\n        const res = await fetch(url);\n        const { status } = res;\n\n        if (!res.ok) {\n            const { message } = await res.json();\n            throw new Error(`${message} (${status})`);\n        }\n\n        return await res.json();\n    } catch (err) {\n        throw err;\n    }\n};\n\nconst showRecipe = async function (url) {\n    try {\n        const {\n            data: { recipe: recipeData },\n        } = await Promise.race([getJSON(url), timeout(15)]);\n\n        let recipe = Object.fromEntries(\n            Object.entries(recipeData).map(([key, value]) => {\n                const str = key.split('_');\n\n                if (str.length < 2) return [key, value];\n\n                console.log(1111);\n                const finalStr = str\n                    .map((word, i) => {\n                        if (i === 0) return word;\n                        // return word[0].toUpperCase() + word.slice(1);\n                        return word.replace(word[0], word[0].toUpperCase());\n                    })\n                    .join('');\n\n                console.log(finalStr);\n\n                return [finalStr, value];\n            })\n        );\n\n        console.log(recipe);\n    } catch (err) {\n        alert(err);\n    }\n};\n\nshowRecipe(\n    'https://forkify-api.herokuapp.com/api/v2/recipes/5ed6604591c37cdc054bc886'\n);\n"],"names":[],"version":3,"file":"index.62406edb.js.map","sourceRoot":"/__parcel_source_root/"}